# -*- coding: utf-8 -*-
"""Copy of Fianl Project_Wine Quality_ric.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10nferXgEQHSHBVVSdscpVvt5x88RPNlN

Import the dataset
"""

#Importing the libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#import the dataset
redwine = pd.read_csv("/content/winequality-red.csv", sep=';')

"""Exploring the dataset"""

redwine

redwine.head()

redwine.shape

"""Conclude : There 12 series with 1599 entries."""

redwine.columns

redwine.dtypes

redwine.describe()

redwine.duplicated().any()

redwine.isnull().sum()

sns.countplot(x = redwine['quality']).set(title = 'Quality Distribution', 
                                       xlabel = 'Quality', 
                                       ylabel = 'Count');

sns.boxplot(data = redwine['quality'])

"""Step 2 : data Cleaning"""

winecopy = redwine.copy()

winecopy

winecopy.duplicated().value_counts()

winecopy_clean = winecopy.drop_duplicates(inplace=False)
winecopy_clean

"""convert target column "quality" into categorical data."""

winecopy_clean["quality"] = winecopy_clean["quality"].astype('category', copy=False)
winecopy_clean

winecopy_clean.info()

"""There are no missing values in the series."""



"""

**Step 3 : Visualization **"""

# use linepot to check the relationship between density and quality

sns.lineplot(data = winecopy_clean, x = 'quality', y = 'density')

#scatterplot for pH value and three types acid

wineph = winecopy_clean['pH']
v1=wineph.sort_values(axis=0,ascending=True)
v1

plt.figure(figsize=(5,5))
sns.scatterplot(x = v1, y = winecopy_clean['citric acid'])

#fixed acidity

sns.lineplot(data = winecopy_clean, x = v1, y = winecopy_clean['fixed acidity'])

#ph density

plt.figure(figsize=(20,5))
sns.barplot(data = winecopy_clean, x = v1, y = winecopy_clean['volatile acidity'])

# therefore, we can remove pH when we do regression since it's very similar to three types of acids

# see the relationship between the two sulfer dioxide

winecopy_clean['free sulfur dioxide']

sns.lineplot(data = winecopy_clean, x = 'free sulfur dioxide', y = 'total sulfur dioxide')

# more free sulfur dioxide, more total sulfer dioxide

"""# **Step 4: Feature Importance**"""

plt.figure(figsize=(15,10))
sns.heatmap(redwine.corr(),linewidth=0.5,annot=True, center=0, cmap='GnBu')

